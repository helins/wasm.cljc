version: 2.1



# Anchors for reusability
with_java_version: &with_java_version
    parameters:
      java_version:
        description: "OpenJDK version to test"
        type: string

cache_paths_clojure: &cache_paths_clojure
  paths:
    - ~/.m2
    - .cpcache



executors:
  exec_java:
    docker:
      - image: circleci/clojure:openjdk-<< parameters.java_version >>-tools-deps-node
    <<: *with_java_version



jobs:

  TestNode:
    docker:
      - image: circleci/clojure:openjdk-11-tools-deps-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-v1-{{ checksum "package-lock.json" }}
            - npm-v1
      - save_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - restore_cache:
          keys:
            - cljs-v1-{{ checksum "deps.edn" }}
            - cljs-v1
      - run:
          name: Test
          command: ./bin/test/node/run
      - run:
          name: Test advanced
          command: ./bin/test/node/run
      - save_cache:
          key: cljs-v1-{{ checksum "deps.edn" }}
          <<: *cache_paths_clojure
          

  TestJVM:
    <<: *with_java_version
    executor:
      name: exec_java
      java_version: << parameters.java_version >>
    docker:
      - image: circleci/clojure:openjdk-11-tools-deps-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - clojure-v1-{{ checksum "pom.xml" }}
            - clojure-v1
      - run: 
          name: Koacha
          command: ./bin/test/jvm/run
      - save_cache:
          key: clojure-v1-{{ checksum "pom.xml" }}
          <<: *cache_paths_clojure



workflows:
  version: 2
  Test:
    jobs:
      - TestNode
      - TestJVM:
          matrix:
            parameters:
              java_version: ["8", "11", "15"]
